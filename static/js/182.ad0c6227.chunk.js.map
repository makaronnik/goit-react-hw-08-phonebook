{"version":3,"file":"static/js/182.ad0c6227.chunk.js","mappings":"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","sources":["pages/SignInPage.jsx","utils/validators.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Box,\n  Avatar,\n  Button,\n  TextField,\n  Link as MuiLink,\n  Grid,\n  Typography,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { toast } from 'react-toastify';\nimport { validateEmail } from 'utils/validators';\nimport { login } from 'redux/auth/authThunks';\nimport { clearError } from 'redux/auth/authSlice';\nimport { selectIsLoading, selectError } from 'redux/auth/authSelectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function SignInPage() {\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(null);\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState(null);\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setEmailError(null);\n    setPasswordError(null);\n  }, [email, password]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error, {\n        onClose: () => dispatch(clearError()),\n      });\n    }\n  }, [dispatch, error]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    let errors = false;\n\n    if (!validateEmail(email)) {\n      setEmailError('Email is not valid');\n      errors = true;\n    }\n\n    if (password.length < 7) {\n      setPasswordError('Password must be at least 7 characters');\n      errors = true;\n    }\n\n    if (errors) {\n      return;\n    }\n\n    const formData = new FormData(event.currentTarget);\n\n    const credentials = Object.fromEntries(formData.entries());\n\n    dispatch(login(credentials));\n  };\n\n  if (isLoading) {\n    return <Loader size={150} />;\n  }\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        maxWidth: 500,\n        mx: 'auto',\n      }}\n    >\n      <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n        <LockOutlinedIcon />\n      </Avatar>\n\n      <Typography component=\"h1\" variant=\"h5\">\n        Sign in\n      </Typography>\n\n      <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              label=\"Email Address\"\n              name=\"email\"\n              id=\"email\"\n              autoComplete=\"email\"\n              required\n              fullWidth\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n              error={emailError !== null}\n              helperText={emailError}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              label=\"Password\"\n              name=\"password\"\n              id=\"password\"\n              type=\"password\"\n              autoComplete=\"new-password\"\n              required\n              fullWidth\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              error={passwordError !== null}\n              helperText={passwordError}\n            />\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Sign In\n        </Button>\n\n        <Grid container justifyContent=\"flex-end\">\n          <Grid item>\n            <Link to={'/signup'}>\n              <MuiLink variant=\"body2\">Don't have an account? Sign Up</MuiLink>\n            </Link>\n          </Grid>\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n","export const validateEmail = email => {\n  const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,})+$/;\n\n  return emailRegex.test(email);\n};\n"],"names":["SignInPage","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","emailError","setEmailError","_useState5","_useState6","password","setPassword","_useState7","_useState8","passwordError","setPasswordError","isLoading","useSelector","selectIsLoading","error","selectError","dispatch","useDispatch","useEffect","toast","onClose","clearError","_jsx","Loader","size","_jsxs","Box","sx","display","flexDirection","alignItems","maxWidth","mx","children","Avatar","m","bgcolor","LockOutlinedIcon","Typography","component","variant","noValidate","onSubmit","event","preventDefault","errors","validateEmail","length","formData","FormData","currentTarget","credentials","Object","fromEntries","entries","login","mt","Grid","container","spacing","item","xs","TextField","label","name","id","autoComplete","required","fullWidth","value","onChange","e","target","helperText","type","Button","mb","justifyContent","Link","to","MuiLink","test"],"sourceRoot":""}